name: Test nds library

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: "3.6"
          cache: "pip"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; 
            then pip install -r requirements.txt;
          fi
      - name: Test with unittest
        run: |
          python -m unittest discover -v ./tests

      - name: Bump version and push tag
        id: tag-update
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DRY_RUN: true
          INITIAL_VERSION: "0.3.0"
          DEFAULT_BUMP: "none"
          RELEASE_BRANCHES: "master,develop"

      - name: Update version
        id: version-update
        run: |
          sed -i -r 's/version.*=.*(\digit|.)+/version = ${{ steps.tag-update.outputs.new_tag }}/g' ./setup.cfg
          if [ $(git diff --exit-code --name-only ./setup.cfg) ]
          then
            echo "new_version=true" >> $GITHUB_OUTPUT
          fi

      - name: Build wheel
        run: python setup.py bdist_wheel

      - uses: EndBug/add-and-commit@v9
        if: ${{ github.ref == 'refs/heads/develop' && steps.version-update.outputs.new_version == 'true' }}
        with:
          default_author: github_actions
          add: ./setup.cfg
          tag: ${{ steps.tag-update.outputs.new_tag }}

      - name: Publish package to test PyPi
        if: ${{ github.ref == 'refs/heads/develop' && steps.version-update.outputs.new_version == 'true' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        run: |
          twine upload --skip-existing --non-interactive --disable-progress-bar ./dist/*.whl

      - name: Publish package to PyPi
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload --skip-existing --non-interactive --disable-progress-bar ./dist/*.whl
